{"version":3,"file":"ngx-mat-multi-sort.js","sources":["../../projects/mat-multi-sort/src/lib/mat-multi-sort.directive.ts","../projects/mat-multi-sort/src/lib/mat-multi-sort-header/mat-multi-sort-header.component.ts","../../projects/mat-multi-sort/src/lib/utils.ts","../../projects/mat-multi-sort/src/lib/table-data.ts","../projects/mat-multi-sort/src/lib/mat-multi-sort-column-dialog/mat-multi-sort-column-dialog.component.ts","../projects/mat-multi-sort/src/lib/mat-multi-sort-table-settings/mat-multi-sort-table-settings.component.ts","../../projects/mat-multi-sort/src/lib/mat-multi-sort.module.ts","../../projects/mat-multi-sort/src/lib/mat-multi-sort-data-source.ts","../../../projects/mat-multi-sort/src/public_api.ts","../../../projects/mat-multi-sort/src/ngx-mat-multi-sort.ts"],"sourcesContent":["import { Directive, OnChanges, OnInit } from '@angular/core';\r\nimport { MatSort, MatSortable, SortDirection } from '@angular/material/sort';\r\n\r\n@Directive({\r\n  selector: '[matMultiSort]',\r\n  exportAs: 'matMultiSort'\r\n})\r\nexport class MatMultiSort extends MatSort implements OnInit, OnChanges {\r\n\r\n  start = 'asc' as 'asc' | 'desc';\r\n\r\n  actives: string[] = [];\r\n  directions: SortDirection[] = [];\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  sort(sortable: MatSortable): void {\r\n    this.updateMultipleSorts(sortable);\r\n    super.sort(sortable);\r\n  }\r\n\r\n  updateMultipleSorts(sortable: MatSortable): void {\r\n    const i = this.actives.findIndex(activeId => activeId === sortable.id);\r\n\r\n    if (this.isActive(sortable)) {\r\n      if (this.activeDirection(sortable) === (sortable.start ? sortable.start : this.start)) {\r\n        this.directions.splice(i, 1, this.getNextSortDirection(sortable));\r\n      } else {\r\n        this.actives.splice(i, 1);\r\n        this.directions.splice(i, 1);\r\n      }\r\n    } else {\r\n      this.actives.push(sortable.id);\r\n      this.directions.push(sortable.start ? sortable.start : this.start);\r\n    }\r\n  }\r\n\r\n  isActive(sortable: MatSortable) {\r\n    const i = this.actives.findIndex(activeId => activeId === sortable.id);\r\n    return i > -1;\r\n  }\r\n\r\n  activeDirection(sortable: MatSortable): 'asc' | 'desc' {\r\n    const i = this.actives.findIndex(activeId => activeId === sortable.id);\r\n    return this.directions[i] || (sortable.start ? sortable.start : this.start);\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectorRef,\r\n  Optional,\r\n  Inject,\r\n  HostListener,\r\n  HostBinding,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ElementRef\r\n} from '@angular/core';\r\nimport { matSortAnimations, MatSortHeader, MatSortHeaderIntl } from '@angular/material/sort';\r\nimport { MatMultiSort } from '../mat-multi-sort.directive';\r\nimport { FocusMonitor } from '@angular/cdk/a11y';\r\n\r\n/** Column definition associated with a `MatSortHeader`. */\r\ninterface C2MatSortHeaderColumnDef {\r\n  name: string;\r\n}\r\n\r\n@Component({\r\n  selector: '[mat-multi-sort-header]',\r\n  exportAs: 'matMultiSortHeader',\r\n  templateUrl: './mat-multi-sort-header.component.html',\r\n  styleUrls: ['./mat-multi-sort-header.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    matSortAnimations.indicator,\r\n    matSortAnimations.leftPointer,\r\n    matSortAnimations.rightPointer,\r\n    matSortAnimations.arrowOpacity,\r\n    matSortAnimations.arrowPosition,\r\n    matSortAnimations.allowChildren\r\n  ]\r\n})\r\nexport class MatMultiSortHeaderComponent extends MatSortHeader {\r\n  start = 'asc' as 'asc' | 'desc';\r\n  @Input('mat-multi-sort-header') id: string;\r\n\r\n  constructor(public _intl: MatSortHeaderIntl,\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    @Optional() public _sort: MatMultiSort,\r\n    @Inject('C2_SORT_HEADER_COLUMN_DEF') @Optional() public _columnDef: C2MatSortHeaderColumnDef,\r\n    _focusMonitor: FocusMonitor,\r\n    _elementRef: ElementRef<HTMLElement>) {\r\n    super(_intl, changeDetectorRef, _sort, _columnDef, _focusMonitor, _elementRef);\r\n  }\r\n\r\n  @HostListener('mouseenter', ['true'])\r\n  @HostListener('longpress', ['true'])\r\n  @HostListener('mouseleave', ['false'])\r\n  __setIndicatorHintVisible(visible: string | boolean) {\r\n    super._setIndicatorHintVisible(visible as boolean);\r\n  }\r\n\r\n  _handleClick() {\r\n    this._sort.direction = this.getSortDirection();\r\n    super._handleClick();\r\n  }\r\n\r\n  _isSorted() {\r\n    return this._sort.actives.findIndex(activeId => activeId === this.id) > -1;\r\n  }\r\n\r\n  _sortId() {\r\n    return this._sort.actives.findIndex(activeId => activeId === this.id) + 1;\r\n  }\r\n\r\n  _updateArrowDirection() {\r\n    this._arrowDirection = this.getSortDirection();\r\n  }\r\n\r\n  @HostBinding('attr.aria-sort')\r\n  _getAriaSortAttribute() {\r\n    if (!this._isSorted()) {\r\n      return null;\r\n    }\r\n\r\n    return this.getSortDirection() === 'asc' ? 'ascending' : 'descending';\r\n  }\r\n\r\n  _renderArrow() {\r\n    return !this._isDisabled() || this._isSorted();\r\n  }\r\n\r\n  getSortDirection(): 'asc' | 'desc' | '' {\r\n    const i = this._sort.actives.findIndex(activeIds => activeIds === this.id);\r\n    const direction = this._sort.directions[i];\r\n    return this._isSorted() ? direction : (this.start || this._sort.start);\r\n  }\r\n\r\n}\r\n","export class Settings {\r\n    private _columns: Array<{ id: string, name: string, isActive?: boolean }>;\r\n    private _sortParams: string[];\r\n    private _sortDirs: string[];\r\n    private _key: string;\r\n\r\n    constructor(key: string) {\r\n        this._key = key;\r\n        this._columns = [];\r\n        this._sortParams = [];\r\n        this._sortDirs = [];\r\n    }\r\n\r\n    public load() {\r\n        const value = JSON.parse(localStorage.getItem(this._key));\r\n        if (value) {\r\n            this._columns = value._columns || [];\r\n            this._sortDirs = value._sortDirs || [];\r\n            this._sortParams = value._sortParams || [];\r\n        }\r\n    }\r\n\r\n    public save(): void {\r\n        const settingsString = JSON.stringify(this);\r\n        localStorage.setItem(this._key, settingsString);\r\n    }\r\n\r\n    public get columns(): Array<{ id: string, name: string, isActive?: boolean }> {\r\n        return this._columns;\r\n    }\r\n\r\n    public get sortParams(): string[] {\r\n        return this._sortParams;\r\n    }\r\n\r\n    public get sortDirs(): string[] {\r\n        return this._sortDirs;\r\n    }\r\n\r\n    public get key(): String {\r\n        return this._key;\r\n    }\r\n\r\n    public set columns(columns: Array<{ id: string, name: string, isActive?: boolean }>) {\r\n        this._columns = columns;\r\n    }\r\n\r\n    public set sortParams(sortParams: string[]) {\r\n        this._sortParams = sortParams;\r\n    }\r\n\r\n    public set sortDirs(sortDirs: string[]) {\r\n        this._sortDirs = sortDirs;\r\n    }\r\n}\r\n","import { Subject, BehaviorSubject } from 'rxjs';\r\nimport { MatMultiSortTableDataSource } from './mat-multi-sort-data-source';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { SortDirection } from '@angular/material/sort';\r\nimport { Settings } from './utils';\r\n\r\nexport class TableData<T> {\r\n    private _dataSource: MatMultiSortTableDataSource<T>;\r\n    private readonly _columns: BehaviorSubject<{ id: string, name: string, isActive?: boolean }[]>;\r\n    private _displayedColumns: string[];\r\n    pageSize: number;\r\n    pageIndex: number;\r\n    private _pageSizeOptions: number[];\r\n    private _totalElements: number;\r\n    private _sortParams: string[];\r\n    private _sortDirs: string[];\r\n    private _key: string;\r\n\r\n    private _nextObservable: Subject<void> = new Subject<void>();\r\n    private _previousObservable: Subject<void> = new Subject<void>();\r\n    private _sizeObservable: Subject<void> = new Subject<void>();\r\n    private _sortObservable: Subject<void> = new Subject<void>();\r\n\r\n\r\n    // TODO refactor\r\n    constructor(columns: { id: string, name: string, isActive?: boolean }[],\r\n        options?: {\r\n            defaultSortParams?: string[],\r\n            defaultSortDirs?: string[],\r\n            pageSizeOptions?: number[],\r\n            totalElements?: number,\r\n            localStorageKey?: string\r\n        }) {\r\n        this._columns = new BehaviorSubject(columns.map(c => { if (c.isActive === undefined) { c.isActive = true; } return c; }));\r\n\r\n        if (options) {\r\n            if (options.pageSizeOptions && options.pageSizeOptions.length < 1) {\r\n                throw Error('Array of pageSizeOptions must contain at least one entry');\r\n            }\r\n\r\n            if (options.defaultSortParams) {\r\n                options.defaultSortParams.map(s => {\r\n                    if (!this._displayedColumns.includes(s)) {\r\n                        throw Error(`Provided sort parameter \"${s}\" is not a column.`);\r\n                    }\r\n                });\r\n            }\r\n\r\n            this._sortParams = options.defaultSortParams || [];\r\n            this._sortDirs = options.defaultSortDirs || [];\r\n\r\n            if (this._sortParams.length !== this._sortDirs.length) {\r\n                this._sortDirs = this._sortParams.map(() => 'asc');\r\n            }\r\n\r\n            this._totalElements = options.totalElements || 0;\r\n            this._pageSizeOptions = options.pageSizeOptions || [10, 20, 50, 100];\r\n            this._key = options.localStorageKey;\r\n        } else {\r\n            this._pageSizeOptions = [10, 20, 50, 100];\r\n            this._sortParams = [];\r\n            this._sortDirs = [];\r\n        }\r\n        this.pageSize = this._pageSizeOptions[0];\r\n\r\n        this.init();\r\n        this._displayedColumns = this._columns.value.filter(c => c.isActive).map(c => c.id);\r\n\r\n    }\r\n\r\n    public onSortEvent() {\r\n        this._sortParams = this._dataSource.sort['actives'];\r\n        this._sortDirs = this._dataSource.sort['directions'];\r\n        this._clientSideSort();\r\n        this._sortObservable.next();\r\n        this.storeTableSettings();\r\n    }\r\n\r\n    public onPaginationEvent($event: PageEvent) {\r\n        const tmpPageSize: number = this.pageSize;\r\n        this.pageSize = $event.pageSize;\r\n        this.pageIndex = $event.pageIndex;\r\n\r\n        if (tmpPageSize !== this.pageSize) {\r\n            this._sizeObservable.next();\r\n        } else if ($event.previousPageIndex < $event.pageIndex) {\r\n            this._nextObservable.next();\r\n        } else if ($event.previousPageIndex > $event.pageIndex) {\r\n            this._previousObservable.next();\r\n        }\r\n    }\r\n\r\n    public updateSortHeaders(): void {\r\n        // Dirty hack to display default sort column(s)\r\n        const temp = Object.assign([], this._displayedColumns);\r\n        this._displayedColumns = [];\r\n        setTimeout(() => this._displayedColumns = temp, 0);\r\n        this._clientSideSort();\r\n        this._sortObservable.next();\r\n        this.storeTableSettings();1\r\n    }\r\n\r\n    private init() {\r\n        console.debug(\"init\");\r\n        if (this._key) {\r\n            const settings = new Settings(this._key);\r\n            settings.load();\r\n            if (this._isLocalStorageSettingsValid(settings)) {\r\n                this.columns = settings.columns;\r\n                this._sortDirs = settings.sortDirs;\r\n                this._sortParams = settings.sortParams;\r\n            } else {\r\n                console.warn(\"Stored tableSettings are invalid. Using default\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private _clientSideSort() {\r\n        this._dataSource.orderData();\r\n    }\r\n\r\n    private _isLocalStorageSettingsValid(settings: Settings): boolean {\r\n        // check if number of columns matching\r\n        if (settings.columns.length !== this._columns.value.length) {\r\n            return false;\r\n        }\r\n\r\n        // check if columns are the same\r\n        for (var column of settings.columns) {\r\n            var match = this._columns.value.filter(c => c.id == column.id && c.name == column.name);\r\n            if (match === undefined) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public storeTableSettings(): void {\r\n        console.log(\"Store\")\r\n        if (this._key) {\r\n            const settings: Settings = new Settings(this._key);\r\n            settings.columns = this._columns.value;\r\n            settings.sortParams = this._sortParams;\r\n            settings.sortDirs = this._sortDirs;\r\n            settings.save();\r\n        }\r\n    }\r\n\r\n    public set totalElements(totalElements: number) {\r\n        this._totalElements = totalElements;\r\n    }\r\n\r\n    public get totalElements(): number {\r\n        return this._totalElements;\r\n    }\r\n\r\n    public set displayedColumns(displayedColumns: string[]) {\r\n        this._displayedColumns = displayedColumns;\r\n    }\r\n\r\n    public get displayedColumns(): string[] {\r\n        return this._displayedColumns;\r\n    }\r\n\r\n    public set dataSource(dataSource: MatMultiSortTableDataSource<T>) {\r\n        this._dataSource = dataSource;\r\n        if (this._sortParams.length > 0) {\r\n            this._dataSource.sort.actives = this._sortParams;\r\n            this._dataSource.sort.directions = this._sortDirs.map(v => v as SortDirection);\r\n            this.updateSortHeaders();\r\n        }\r\n    }\r\n\r\n    public get dataSource(): MatMultiSortTableDataSource<T> {\r\n        return this._dataSource;\r\n    }\r\n\r\n    public set data(data: T[]) {\r\n        this._dataSource.data = data;\r\n        this._clientSideSort();\r\n    }\r\n\r\n    public set columns(v: { id: string, name: string, isActive?: boolean }[]) {\r\n        this._columns.next(v.map(c => { if (c.isActive === undefined) { c.isActive = true; } return c; }));\r\n    }\r\n\r\n    public onColumnsChange(): BehaviorSubject<{ id: string, name: string, isActive?: boolean }[]> {\r\n        return this._columns;\r\n    }\r\n\r\n    public updateColumnNames(v: { id: string, name: string }[]) {\r\n        const dict = {};\r\n        v.forEach(c => dict[c.id] = c.name);\r\n        this._columns.next(this._columns.value.map(c => { c.name = dict[c.id] || c.name; return c; }));\r\n    }\r\n\r\n    public get nextObservable(): Subject<any> {\r\n        return this._nextObservable;\r\n    }\r\n\r\n    public get previousObservable(): Subject<any> {\r\n        return this._previousObservable;\r\n    }\r\n\r\n    public get sizeObservable(): Subject<any> {\r\n        return this._sizeObservable;\r\n    }\r\n\r\n    public get sortObservable(): Subject<any> {\r\n        return this._sortObservable;\r\n    }\r\n\r\n    public get sortParams(): string[] {\r\n        return this._sortParams;\r\n    }\r\n\r\n    public get sortDirs(): string[] {\r\n        return this._sortDirs;\r\n    }\r\n\r\n    public get columns(): { id: string, name: string, isActive?: boolean }[] {\r\n        return this._columns.value;\r\n    }\r\n\r\n    public get pageSizeOptions(): number[] {\r\n        return this._pageSizeOptions;\r\n    }\r\n\r\n    public set sortParams(v: string[]) {\r\n        this._sortParams = v;\r\n        this._dataSource.sort.actives = this._sortParams;\r\n    }\r\n\r\n    public set sortDirs(v: string[]) {\r\n        this._sortDirs = v;\r\n        this._dataSource.sort.directions = this._sortDirs.map(elem => elem as SortDirection);\r\n    }\r\n}\r\n","import {Component, Inject, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\r\nimport {TableData} from '../table-data';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'mat-multi-sort-column-dialog',\r\n  templateUrl: './mat-multi-sort-column-dialog.component.html',\r\n  styleUrls: ['./mat-multi-sort-column-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MatMultiSortColumnDialogComponent implements OnInit {\r\n\r\n  _tableData: TableData<any>;\r\n  sort = [];\r\n  closeOnChoice: boolean;\r\n\r\n  constructor(private dialogRef: MatDialogRef<MatMultiSortColumnDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) data) {\r\n    this._tableData = data.tableData;\r\n    this.sort = data.sort;\r\n    this.closeOnChoice = data.closeOnChoice;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this._tableData.columns, event.previousIndex, event.currentIndex);\r\n    this._tableData.displayedColumns = this._tableData.columns.filter(c => c.isActive).map(c => c.id);\r\n    this._tableData.storeTableSettings();\r\n  }\r\n\r\n  toggle() {\r\n    this._tableData.displayedColumns = this._tableData.columns.filter(c => {\r\n      if (!c.isActive) {\r\n        this.sort = this.sort.filter(s => s.id !== c.id);\r\n      }\r\n\r\n      return c.isActive;\r\n    }).map(c => c.id);\r\n    this.updateSort();\r\n  }\r\n\r\n  private updateSort() {\r\n    this._tableData.sortParams = this.sort.map(v => v.id);\r\n    this._tableData.sortDirs = this.sort.map(v => v.direction);\r\n    this._tableData.updateSortHeaders();\r\n    if (this.closeOnChoice) {\r\n      this.dialogRef.close();\r\n    }\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { TableData } from '../table-data';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatMultiSortColumnDialogComponent } from '../mat-multi-sort-column-dialog/mat-multi-sort-column-dialog.component';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'mat-multi-sort-table-settings',\r\n  templateUrl: './mat-multi-sort-table-settings.component.html',\r\n  styleUrls: ['./mat-multi-sort-table-settings.component.scss']\r\n})\r\nexport class MatMultiSortTableSettingsComponent implements OnInit {\r\n  _tableData: TableData<any>;\r\n  sort = [];\r\n  dialogRef: MatDialogRef<any>;\r\n\r\n  @ViewChild('settingsMenu') buttonRef: ElementRef;\r\n\r\n  @Input()\r\n  sortToolTip: string;\r\n\r\n  @Input()\r\n  closeDialogOnChoice = true;\r\n\r\n  @Input()\r\n  set tableData(tableData: TableData<any>) {\r\n    this._tableData = tableData;\r\n  }\r\n\r\n\r\n  constructor(private dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.sort = this.getSort();\r\n    this._tableData.sortObservable.subscribe(() => this.sort = this.getSort());\r\n    this._tableData.onColumnsChange().subscribe(() => this.sort = this.getSort());\r\n  }\r\n\r\n  openDialog() {\r\n    if (this.dialogRef) { return; }\r\n    const button = this.buttonRef.nativeElement;\r\n    const posRight: number = window.innerWidth - (button.offsetLeft + button.offsetWidth + 16);\r\n    const posTop: number = button.offsetTop + button.offsetHeight;\r\n\r\n    this.dialogRef = this.dialog.open(MatMultiSortColumnDialogComponent, {\r\n      backdropClass: 'cdk-overlay-transparent-backdrop',\r\n      panelClass: 'column-dialog',\r\n      position: { right: `${posRight}px`, top: `${posTop}px` },\r\n      data: { tableData: this._tableData, sort: this.sort, closeOnChoice: this.closeDialogOnChoice }\r\n    });\r\n    this.dialogRef.backdropClick().subscribe(() => this.dialogRef.close());\r\n    this.dialogRef.afterClosed().pipe(finalize(() => this.dialogRef = null)).subscribe();\r\n  }\r\n\r\n  dropSort(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.sort, event.previousIndex, event.currentIndex);\r\n    this.updateSort();\r\n  }\r\n\r\n  getSort(): { id: string, name: string, direction: string }[] {\r\n    const sorting = [];\r\n    for (let i = 0; i < this._tableData.sortParams.length; i++) {\r\n      sorting.push({\r\n        id: this._tableData.sortParams[i],\r\n        name: this._tableData.columns.find(c => c.id === this._tableData.sortParams[i]).name,\r\n        direction: this._tableData.sortDirs[i]\r\n      });\r\n    }\r\n    return sorting;\r\n  }\r\n\r\n  remove(id: string) {\r\n    this.sort = this.sort.filter(v => v.id !== id);\r\n    this.updateSort();\r\n  }\r\n\r\n  updateDirection(id: string) {\r\n    const i = this.sort.findIndex(v => v.id === id);\r\n    if (this.sort[i].direction === 'asc') {\r\n      this.sort[i].direction = 'desc';\r\n    } else {\r\n      this.sort[i].direction = 'asc';\r\n    }\r\n    this.updateSort();\r\n  }\r\n\r\n  private updateSort() {\r\n    this._tableData.sortParams = this.sort.map(v => v.id);\r\n    this._tableData.sortDirs = this.sort.map(v => v.direction);\r\n    this._tableData.updateSortHeaders();\r\n  }\r\n}\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { MatMultiSort } from './mat-multi-sort.directive';\r\nimport { MatMultiSortHeaderComponent } from './mat-multi-sort-header/mat-multi-sort-header.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatMultiSortTableSettingsComponent } from './mat-multi-sort-table-settings/mat-multi-sort-table-settings.component';\r\nimport { MatMultiSortColumnDialogComponent } from './mat-multi-sort-column-dialog/mat-multi-sort-column-dialog.component';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MatMultiSortHeaderComponent,\r\n    MatMultiSort,\r\n    MatMultiSortTableSettingsComponent,\r\n    MatMultiSortColumnDialogComponent\r\n  ],\r\n  exports: [\r\n    MatMultiSortHeaderComponent,\r\n    MatMultiSort,\r\n    MatMultiSortTableSettingsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatCommonModule,\r\n    MatDividerModule,\r\n    DragDropModule,\r\n    MatIconModule,\r\n    MatCheckboxModule,\r\n    MatMenuModule,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    MatChipsModule,\r\n    MatTooltipModule,\r\n    MatDialogModule\r\n  ]\r\n})\r\nexport class MatMultiSortModule {\r\n}\r\n","import { DataSource } from '@angular/cdk/collections';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { MatMultiSort } from './mat-multi-sort.directive';\r\n\r\nexport class MatMultiSortTableDataSource<T> extends DataSource<T> {\r\n    private _data: BehaviorSubject<T[]> = new BehaviorSubject<T[]>([]);\r\n    private clientSideSorting;\r\n    sort: MatMultiSort;\r\n\r\n    constructor(sort: MatMultiSort, clientSideSorting = false) {\r\n        super();\r\n        this.sort = sort;\r\n        this.clientSideSorting = clientSideSorting;\r\n    }\r\n\r\n    public set data(data: T[]) {\r\n        this._data.next(data);\r\n    }\r\n\r\n    public get data(): T[] {\r\n        return this._data.value;\r\n    }\r\n\r\n    connect(): BehaviorSubject<T[]> {\r\n        return this._data;\r\n    }\r\n\r\n    disconnect(): void {\r\n        this._data.complete();\r\n    }\r\n\r\n    orderData() {\r\n        this._data.next(this.sortData(this._data.value, this.sort.actives, this.sort.directions));\r\n    }\r\n\r\n    sortData(data: T[], actives: string[], directions: string[]): T[] {\r\n        const _data = Object.assign(new Array<T>(), data);\r\n        if (this.clientSideSorting) {\r\n            return _data.sort((i1, i2) => {\r\n                return this._sortData(i1, i2, actives, directions);\r\n            });\r\n        }\r\n        return _data;\r\n    }\r\n\r\n    _sortData(d1: T, d2: T, params: string[], dirs: string[]): number {\r\n        if (d1[params[0]] > d2[params[0]]) {\r\n            return dirs[0] === 'asc' ? 1 : -1;\r\n        } else if (d1[params[0]] < d2[params[0]]) {\r\n            return dirs[0] === 'asc' ? -1 : 1;\r\n        } else {\r\n            if (params.length > 1) {\r\n                params = params.slice(1, params.length);\r\n                dirs = dirs.slice(1, dirs.length);\r\n                return this._sortData(d1, d2, params, dirs);\r\n            } else {\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\n/*\r\n * Public API Surface of mat-multi-sort\r\n */\r\n\r\nexport * from './lib/mat-multi-sort.directive';\r\nexport * from './lib/mat-multi-sort-header/mat-multi-sort-header.component';\r\nexport * from './lib/mat-multi-sort-table-settings/mat-multi-sort-table-settings.component';\r\nexport * from './lib/mat-multi-sort.module';\r\nexport * from './lib/table-data';\r\nexport * from './lib/mat-multi-sort-data-source';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {MatMultiSortColumnDialogComponent as ɵa} from './lib/mat-multi-sort-column-dialog/mat-multi-sort-column-dialog.component';"],"names":[],"mappings":"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"}